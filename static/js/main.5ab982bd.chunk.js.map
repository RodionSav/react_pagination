{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","quantityPages","Math","ceil","allPages","className","cn","disabled","href","onClick","map","page","active","handlePageClick","items","options","App","useState","setPerPage","setCurrentPage","filteredItems","slice","length","lastItemOnPage","min","firstItemOnPage","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAgBC,KAAKC,KAAKN,EAAQC,GAElCM,EAAWd,EAAW,EAAGW,GAkB/B,OACE,mCACE,qBAAII,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAA0B,IAAhBR,IAA3C,SACE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBT,EACfU,QArBa,WACjBV,EAAc,GAChBC,EAAaD,EAAc,IAcvB,oBAUDK,EAASM,KAAI,SAACC,GAAD,OACZ,oBAEEN,UAAWC,IAAG,YAAa,CAAEM,OAAQD,IAASZ,IAFhD,SAIE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAvCG,SAACE,GACvBX,EAAaW,GAsCYE,CAAgBF,IAJjC,SAMGA,KATEA,MAaT,oBAAIN,UAAWC,IAAG,YAChB,CAAEC,SAAUR,IAAgBE,IAD9B,SAGE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeT,IAAgBE,EAC/BQ,QA3Ca,WACjBV,EAAcE,GAChBD,EAAaD,EAAc,IAoCvB,0BC/DJe,EAAQxB,EAAW,EAAG,IACzBoB,KAAI,SAAAhB,GAAC,qBAAYA,MAEdqB,EAAU,CAAC,EAAG,EAAG,GAAI,IAEdC,EAAgB,WAC3B,MAA8BC,mBAASF,EAAQ,IAA/C,mBAAOjB,EAAP,KAAgBoB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOlB,EAAP,KAAoBoB,EAApB,KACMC,EAAgBN,EAAMO,OAAOtB,EAAc,GAC/CD,EAASC,EAAcD,GAEnBD,EAAQiB,EAAMQ,OAEdC,EAAiBrB,KAAKsB,IAAIzB,EAAcD,EAASD,GACjD4B,GAAoB1B,EAAc,GAAKD,EAAW,EAWxD,OACE,sBAAKO,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWN,EADX,mBACiC0B,EADjC,cACsDF,EADtD,aAIA,sBAAKlB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRqB,GAAG,kBACHrB,UAAU,eACVsB,MAAO7B,EACP8B,SAxBiB,SAACC,GAC1BX,GAAYW,EAAMC,OAAOH,OACzBR,EAAe,IAiBT,SAQGJ,EAAQL,KAAI,SAACiB,GACZ,OACE,wBAEEA,MAAOA,EAFT,SAIGA,GAHIA,UAUf,uBAAOI,QAAQ,kBAAkB1B,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACER,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aA3CmB,SAACW,GACxBQ,EAAeR,MA4Cb,6BACGS,EAAcV,KAAI,SAACsB,GAClB,OACE,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCxEpCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5ab982bd.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const quantityPages = Math.ceil(total / perPage);\n\n  const allPages = getNumbers(1, quantityPages);\n\n  const handlePageClick = (page: number) => {\n    onPageChange(page);\n  };\n\n  const handlePrevPage = () => {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleNextPage = () => {\n    if (currentPage < quantityPages) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn('page-item', { disabled: currentPage === 1 })}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={handlePrevPage}\n          >\n            «\n          </a>\n        </li>\n        {allPages.map((page) => (\n          <li\n            key={page}\n            className={cn('page-item', { active: page === currentPage })}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => handlePageClick(page)}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n        <li className={cn('page-item',\n          { disabled: currentPage === quantityPages })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === quantityPages}\n            onClick={handleNextPage}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nconst options = [3, 5, 10, 20];\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(options[1]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const filteredItems = items.slice((currentPage - 1)\n  * perPage, currentPage * perPage);\n\n  const total = items.length;\n\n  const lastItemOnPage = Math.min(currentPage * perPage, total);\n  const firstItemOnPage = ((currentPage - 1) * perPage) + 1;\n\n  const handleChangeOption = (event: ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemOnPage} - ${lastItemOnPage} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handleChangeOption}\n\n          >\n            {options.map((value) => {\n              return (\n                <option\n                  key={value}\n                  value={value}\n                >\n                  {value}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n      <ul>\n        {filteredItems.map((item) => {\n          return (\n            <li data-cy=\"item\" key={item}>{item}</li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
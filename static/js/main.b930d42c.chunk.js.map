{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","useState","activePage","setActivePage","quantityPages","Math","ceil","allPages","useEffect","className","cn","disabled","href","onClick","map","page","active","handlePageClick","items","options","App","setPerPage","setCurrentPage","filteredItems","slice","length","lastItemOnPage","min","firstItemOnPage","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEA,EAAoCC,mBAAiB,GAArD,mBAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAgBC,KAAKC,KAAKT,EAAQC,GAElCS,EAAWjB,EAAW,EAAGc,GAO/BI,qBAAU,WACRL,EAAcJ,KACb,CAACA,IAcJ,OACE,mCACE,qBAAIU,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAA0B,IAAhBZ,IAA3C,SACE,mBACE,UAAQ,WACRU,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBb,EACfc,QArBa,WACjBd,EAAc,GAChBC,EAAaD,EAAc,IAcvB,oBAUDQ,EAASO,KAAI,SAACC,GACb,OACE,oBAEEN,UAAWC,IAAG,YAAa,CAAEM,OAAQD,IAASb,IAFhD,SAIE,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBA7CC,SAACE,GACvBZ,EAAcY,GACdf,EAAae,GA2CcE,CAAgBF,IAJjC,SAMGA,KATEA,MAcX,oBAAIN,UAAWC,IAAG,YAChB,CAAEC,SAAUZ,IAAgBK,IAD9B,SAGE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAAeb,IAAgBK,EAC/BS,QA7Ca,WACjBd,EAAcK,GAChBJ,EAAaD,EAAc,IAsCvB,0BCxEJmB,EAAQ5B,EAAW,EAAG,IACzBwB,KAAI,SAAApB,GAAC,qBAAYA,MAEdyB,EAAU,CAAC,EAAG,EAAG,GAAI,IAEdC,EAAgB,WAC3B,MAA8BnB,mBAASkB,EAAQ,IAA/C,mBAAOrB,EAAP,KAAgBuB,EAAhB,KACA,EAAsCpB,mBAAS,GAA/C,mBAAOF,EAAP,KAAoBuB,EAApB,KACMC,EAAgBL,EAAMM,OAAOzB,EAAc,GAC/CD,EAASC,EAAcD,GAEnBD,EAAQqB,EAAMO,OAEdC,EAAiBrB,KAAKsB,IAAI5B,EAAcD,EAASD,GACjD+B,GAAoB7B,EAAc,GAAKD,EAAW,EAWxD,OACE,sBAAKW,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWV,EADX,mBACiC6B,EADjC,cACsDF,EADtD,aAIA,sBAAKjB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRoB,GAAG,kBACHpB,UAAU,eACVqB,MAAOhC,EACPiC,SAxBiB,SAACC,GAC1BX,GAAYW,EAAMC,OAAOH,OACzBR,EAAe,IAiBT,SAQGH,EAAQL,KAAI,SAACgB,GACZ,OACE,wBAEEA,MAAOA,EAFT,SAIGA,GAHIA,UAUf,uBAAOI,QAAQ,kBAAkBzB,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEZ,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aA3CmB,SAACe,GACxBO,EAAeP,MA4Cb,6BACGQ,EAAcT,KAAI,SAACqB,GAClB,OACE,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCxEpCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b930d42c.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React, { useState, useEffect } from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const [activePage, setActivePage] = useState<number>(1);\n\n  const quantityPages = Math.ceil(total / perPage);\n\n  const allPages = getNumbers(1, quantityPages);\n\n  const handlePageClick = (page: number) => {\n    setActivePage(page);\n    onPageChange(page);\n  };\n\n  useEffect(() => {\n    setActivePage(currentPage);\n  }, [currentPage]);\n\n  const handlePrevPage = () => {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleNextPage = () => {\n    if (currentPage < quantityPages) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn('page-item', { disabled: currentPage === 1 })}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={handlePrevPage}\n          >\n            «\n          </a>\n        </li>\n        {allPages.map((page) => {\n          return (\n            <li\n              key={page}\n              className={cn('page-item', { active: page === activePage })}\n            >\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${page}`}\n                onClick={() => handlePageClick(page)}\n              >\n                {page}\n              </a>\n            </li>\n          );\n        })}\n        <li className={cn('page-item',\n          { disabled: currentPage === quantityPages })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === quantityPages}\n            onClick={handleNextPage}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nconst options = [3, 5, 10, 20];\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(options[1]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const filteredItems = items.slice((currentPage - 1)\n  * perPage, currentPage * perPage);\n\n  const total = items.length;\n\n  const lastItemOnPage = Math.min(currentPage * perPage, total);\n  const firstItemOnPage = ((currentPage - 1) * perPage) + 1;\n\n  const handleChangeOption = (event: ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemOnPage} - ${lastItemOnPage} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handleChangeOption}\n\n          >\n            {options.map((value) => {\n              return (\n                <option\n                  key={value}\n                  value={value}\n                >\n                  {value}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n      <ul>\n        {filteredItems.map((item) => {\n          return (\n            <li data-cy=\"item\" key={item}>{item}</li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}